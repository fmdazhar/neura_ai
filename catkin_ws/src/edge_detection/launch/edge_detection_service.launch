<!-- edge_detection_service.launch-->

<launch>
  <!-- Launch argument for the bag file path -->
  <arg name="bag_path" default="/root/catkin_ws/src/edge_detection/data/bagfiles/withpointcloud.bag"
       doc="Absolute path to the .bag file you want to play" />

  <!-- Use simulated time -->
  <param name="use_sim_time" value="true" />

  <!-- Launch the robot description using mira_picker -->
  <include file="$(find mira_picker)/launch/display.launch">
    <arg name="gripper_name" value="robotiq2f_140" />
    <arg name="publish_joint_state" value="false" />
    <arg name="publish_robot_state" value="false" />
  </include>

  <!-- Static transform from depth optical frame to color optical frame -->
  <node pkg="tf" type="static_transform_publisher" name="depth_to_color_tf_pub" args="0.015 0 0 0 0 0 camera_color_optical_frame camera_depth_optical_frame 100" />

  <!-- Play the bag file in loop mode with simulated time -->
  <node pkg="rosbag" type="play" name="bag_play" required="true"
        args="--quiet --clock -l $(arg bag_path)" output="screen" />

  <!-- Edge detection service node -->
  <node pkg="edge_detection" type="edge_detection_service.py" name="edge_detection_service" output="screen">
    <!-- Choose the method: "canny", "sobel", "laplacian", "prewitt", "roberts", or "hed" -->
    <param name="method" value="canny" />
    <param name="canny_low_threshold"  value="250" />
    <param name="canny_high_threshold" value="300" />
    <param name="camera_info_topic" value="/camera/depth/camera_info" />

  </node>

  <node pkg="edge_detection" type="edge_detection_client.py" name="edge_detection_client" output="screen">
    <param name="color_topic" value="/camera/color/image_raw" />
    <param name="depth_topic" value="/camera/depth/image_rect_raw" />
    <param name="service_name" value="edge_detection_service" />
  </node>
</launch>
